version: "3.8"

services:
    zookeeper:
        image: bitnami/zookeeper:latest
        ports:
            - 2181:2181
        environment:
            - ALLOW_ANONYMOUS_LOGIN=yes

    kafka:
        image: bitnami/kafka:latest
        ports:
            - 9092:9092
            - 9093:9093
        environment:
            - KAFKA_BROKER_ID=1
            - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
            - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
            - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
            - ALLOW_PLAINTEXT_LISTENER=yes
            - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT
            - KAFKA_CFG_LISTENERS=CLIENT://:9092
            - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092
            - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
        depends_on:
            - zookeeper

    src:
          build:
              context: ./
              dockerfile: ./src/Dockerfile
          command: bash -c "alembic -c src/alembic.ini upgrade 246f37f26b29 &&
                    uvicorn src.app.service:app --host 0.0.0.0 --port 24104"
          ports:
              - 24104:24104
          volumes:
              - ./src/:/opt/pysetup/src
          depends_on:
              - kafka
              - zookeeper
              - postgres

    src_auth:
        build:
            context: ./
            dockerfile: ./src_auth/Dockerfile
        command: uvicorn src_auth.app.service:app --host 0.0.0.0 --port 24004
        ports:
            - 24004:24004
        volumes:
            - ./src_auth/:/opt/pysetup/src_auth
        depends_on:
            - kafka
            - zookeeper
            - postgres

    src_verify:
        build:
            context: ./
            dockerfile: ./src_verify/Dockerfile
        command: uvicorn src_verify.app.service:app --host 0.0.0.0 --port 24204
        ports:
            - 24204:24204
        depends_on:
            - kafka
            - zookeeper
            - postgres


    postgres:
        image: postgres:15.4
        container_name: db-pg
        ports:
            - "5432:5432"
        restart: always
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=db
        volumes:
            - db:/var/lib/postgresql/data/

volumes:
  db:
    driver: local
